server {
    listen 443 ssl;
    server_name fantasystore.com.br www.fantasystore.com.br;

    ssl_certificate /etc/letsencrypt/live/fantasystore.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fantasystore.com.br/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Aumentar os timeouts para operações mais lentas
    proxy_read_timeout 300s;
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;

    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Configuração para arquivos estáticos
    location /_next/static {
        proxy_pass http://localhost:3000/_next/static;
        proxy_cache_bypass $http_upgrade;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Para arquivos estáticos na pasta public
    location /public {
        proxy_pass http://localhost:3000/public;
        proxy_cache_bypass $http_upgrade;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }
}

server {
    listen 80;
    server_name fantasystore.com.br www.fantasystore.com.br;

    # Verificar se a requisição vem do Cloudflare
    # Se vier do Cloudflare como HTTPS, processar normalmente
    # Se não, redirecionar para HTTPS

    set $cloudflare_https 0;
    if ($http_cf_visitor ~ '{"scheme":"https"}') {
        set $cloudflare_https 1;
    }

    # Se Cloudflare já enviou como HTTPS, não redirecionar
    if ($cloudflare_https = 0) {
        return 301 https://$host$request_uri;
    }

    # Aumentar os timeouts para operações mais lentas
    proxy_read_timeout 300s;
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;

    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Configuração para arquivos estáticos
    location /_next/static {
        proxy_pass http://localhost:3000/_next/static;
        proxy_cache_bypass $http_upgrade;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Para arquivos estáticos na pasta public
    location /public {
        proxy_pass http://localhost:3000/public;
        proxy_cache_bypass $http_upgrade;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }
}